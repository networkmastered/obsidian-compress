//Credit: github networkmaster
import { BB } from "./BB.js"
import LZ from "./runlengthMatch.js"
import { inflate, deflate } from "./pakoMinified.js"
import { decodeSafe, encodeSafe } from "./runlength.js"

//compressed json. (dictionaryBIG.json)
let wordDict = (() => { let r = new BB(); r.F(""); let pr = []; while (true) { let m = r.RU(8); if (isNaN(m)) break; pr.push(m) } return new TextDecoder().decode(inflate(new Uint8Array(pr))).split(";") })()




//compressed json. (dictionaryBIG2.json)
let wordDictLarge = (() => { let r = new BB(); r.F(""); let pr = []; while (true) { let m = r.RU(8); if (isNaN(m)) break; pr.push(m) } return new TextDecoder().decode(inflate(new Uint8Array(pr))).split(";") })()

let wordDictSmall = ["im", "we", "am", "it", "in", "my", "and", "the"] // Max Length: 8, entry length 2+
let wordDictTiny = ["i", " ", "a", "\n"] // Max Length: 4, entry length 1+

wordDict.forEach((w, i) => {
    if (w.length < 3) throw new Error("Dict, " + (i + 1))
})

let type1 = /[a-z\.\-\: \n]/gm
let type1swap = "\nabcdefghijklmnopqrstuvwxyz.-: ".split("")
function runTest(str, specificTest) {
    let CompData = new BB()
    CompData.WU(5, 0)
    let results = { type1: { done: false }, type2: { done: false }, type3: { done: false }, type4: { done: false }, type5: { done: false } }
    if (str.replace(type1, "") == "") {
        let W = new BB()
        str.split("").forEach((char) => {
            W.WU(5, type1swap.indexOf(char))
        })
        results.type1.result = W.G()
        results.type1.done = true
    }
    if (true) {
        let W = new BB()
        let largest = 0
        let smallest = Infinity
        str.split("").forEach((char) => {
            if (char.charCodeAt(0) && char.charCodeAt(0) > largest) largest = char.charCodeAt(0)
            if (char.charCodeAt(0) && char.charCodeAt(0) < smallest) smallest = char.charCodeAt(0)
        })
        let size = largest - smallest
        if (size == 0) size++
        W.WU(8, size)
        W.WU(8, smallest)
        str.split("").forEach((char) => {
            W.WU(Math.ceil(Math.log2(size)) + 1, char.charCodeAt(0) - smallest + 1)
        })
        results.type2.result = W.G()
        results.type2.done = true
    }
    if (true) {
        let W = new BB()
        let drain = str
        while (true) {
            if (drain.length == 0) break
            let fnd = false
            wordDict.forEach((wrd, i) => {
                if (!fnd && drain.startsWith(wrd)) {
                    W.WU(2, 0)
                    W.WU(12, i)
                    drain = drain.replace(wrd, "")
                    fnd = true
                }
            })
            wordDictSmall.forEach((wrd, i) => {
                if (!fnd && drain.startsWith(wrd)) {
                    W.WU(2, 1)
                    W.WU(3, i)
                    drain = drain.replace(wrd, "")
                    fnd = true
                }
            })
            wordDictTiny.forEach((wrd, i) => {
                if (!fnd && drain.startsWith(wrd)) {
                    W.WU(2, 2)
                    W.WU(2, i)
                    drain = drain.replace(wrd, "")
                    fnd = true
                }
            })
            if (!fnd) {
                if (!drain.charCodeAt(0)) throw new Error("Unknown char")
                W.WU(2, 3)
                W.WU(8, drain.charCodeAt(0))
                drain = drain.substring(1)
            }
        }
        results.type3.result = W.G()
        results.type3.done = true
    }
    if (true) {
        results.type4.result = str
        results.type4.done = true
    }
    if (true) {
        let W = new BB()
        let drain = str
        let good = true
        while (true) {
            if (drain.length == 0) break
            let fnd = false
            wordDictLarge.forEach((wrd, i) => {
                if (!fnd && drain.startsWith(wrd)) {
                    W.WU(2, 0)
                    W.WU(13, i)
                    drain = drain.replace(wrd, "")
                    fnd = true
                }
            })
            wordDictSmall.forEach((wrd, i) => {
                if (!fnd && drain.startsWith(wrd)) {
                    W.WU(2, 1)
                    W.WU(3, i)
                    drain = drain.replace(wrd, "")
                    fnd = true
                }
            })
            wordDictTiny.forEach((wrd, i) => {
                if (!fnd && drain.startsWith(wrd)) {
                    W.WU(2, 2)
                    W.WU(2, i)
                    drain = drain.replace(wrd, "")
                    fnd = true
                }
            })
            if (!fnd) {
                if (!drain.charCodeAt(0)) throw new Error("Unknown char")
                if (drain.charCodeAt(0) <= 64) good = false
                W.WU(2, 3)
                W.WU(6, drain.charCodeAt(0) - 64)
                drain = drain.substring(1)
            }
        }
        results.type5.result = W.G()
        results.type5.done = good
    }


    Object.keys(results).forEach((type) => {
        if (results[type] && results[type].done && results[type].result) {
            let MD = new BB()
            let LZC = ""
            let PKC = ""
            let temp = LZ.compress(results[type].result)
            if (LZ.decompress(temp) == results[type].result) { LZC = temp.replace("` ", "•") } else { throw new Error("Mismatch 1") }
            temp = deflate(results[type].result)
            if (new TextDecoder().decode(inflate(temp)) == results[type].result) {
                let W = new BB()
                temp.forEach((byte) => {
                    if (byte >= 2 ** 8) throw new Error("OOR")
                    W.WU(8, byte)
                })
                PKC = W.G()
            } else { throw new Error("Mismatch 2") }

            // console.log("DATA", "\n1.", LZC, "\n2.", PKC, "\n3.", PZC, "\n4.", LKC)
            // if (LZC.length <= PKC.length && LZC.length <= PZC.length && LZC.length <= LKC.length && LZC.length < results[type].result.length) {
            //     MD.WU(5, 0)
            //     results[type].result = LZC
            // } else if (PKC.length <= LZC.length && PKC.length <= PZC.length && PKC.length <= LKC.length && PKC.length < results[type].result.length) {
            //     MD.WU(5, 1)
            //     results[type].result = PKC
            // } else if (PZC.length <= PKC.length && PZC.length <= PZC.length && PZC.length <= LKC.length && PZC.length < results[type].result.length) {
            //     MD.WU(5, 2)
            //     results[type].result = PZC
            // } else if (LKC.length <= PKC.length && LKC.length <= PZC.length && LKC.length <= LZC.length && LKC.length < results[type].result.length) {
            //     MD.WU(5, 3)
            //     results[type].result = LKC
            // } else {
            //     MD.WU(5, 31)
            // }
            // results[type].result = MD.G() + results[type].result
            if (LZC.length <= PKC.length && LZC.length < results[type].result.length) {
                results[type].result = LZC
                MD.WU(5, 1)
            } else if (PKC.length <= LZC.length && PKC.length < results[type].result.length) {
                results[type].result = PKC
                MD.WU(5, 2)
            } else {
                MD.WU(5, 31)
            }
            results[type].result = MD.G() + results[type].result
        }
    })
    let largest = null
    let size = Infinity
    Object.keys(results).forEach((type) => {
        if (results[type] && results[type].done && results[type].result) {
            if (results[type].result.length < size) { size = results[type].result.length; largest = type }
        }
    })
    if (specificTest) largest = specificTest
    if (largest) {
        let id = parseInt(largest.substring(4))
        if (id) {
            CompData.WU(5, id)
            return encodeSafe(CompData.G() + results[largest].result)
        } else { throw new Error("Cannot find type " + largest) }
    } else {
        return "UNCOMP" + encodeSafe(str)
    }
}
export function netcompress(str, imdtyp) {
    let out = runTest(str, imdtyp); return out
}
export function netdecompress(str) {
    if (str.startsWith("UNCOMP")) return decodeSafe(str.substring(6))
    str = decodeSafe(str)
    let meta = str.substring(0, 2)
    str = str.substring(2)
    let r = new BB()
    r.F(meta)
    let ver = r.RU(5)
    let id = r.RU(5)
    let out = ""
    let finals = str.substring(0, 1)
    str = str.substring(1)
    r = new BB()
    r.F(finals)
    let typ = r.RU(5)
    switch (typ) {
        case 1:
            str = LZ.decompress(str.replaceAll("•", "` "))
            break
        case 2:
            let sta = new BB()
            sta.F(str)
            let bk = []
            while (true) { let nr = sta.RU(8); if (isNaN(nr)) { break }; bk.push(nr) }
            str = new TextDecoder().decode(inflate(new Uint8Array(bk)))
            break
    }
    let W = new BB()
    W.F(str)
    switch (id) {
        case 1:
            while (true) {
                let n = W.RU(5)
                if (!isNaN(n)) {
                    out += type1swap[n]
                } else break
            }
            break;
        case 2:
            let size = W.RU(8)
            let small = W.RU(8)
            while (true) {
                let n = W.RU(Math.ceil(Math.log2(size)) + 1)
                if (!isNaN(n) && n != 0) {
                    out += String.fromCharCode(n + small - 1)
                } else break
            }
            break;
        case 3:
        case 5:
            let go = true
            while (go) {
                let n = W.RU(2)
                if (isNaN(n)) break
                switch (n) {
                    case 0:
                        let ind = W.RU(13)
                        if (isNaN(ind)) break
                        out += wordDictLarge[ind]
                        break;
                    case 1:
                        out += wordDictSmall[W.RU(3)]
                        break;
                    case 2:
                        out += wordDictTiny[W.RU(2)]
                        break;
                    case 3:
                        let chid = 0
                        if (id == 5) chid = W.RU(6) + 64
                        if (id == 3) chid = W.RU(8)
                        out += String.fromCharCode(chid)
                        break;
                }
            }
            break;
        case 4:
            out += str
            break;
    }
    return out
}